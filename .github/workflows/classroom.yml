name: Run tests only for changed Go files

on:
  pull_request:
    paths:
      - '**.go'
  push:
    branches:
      - main
    paths:
      - '**.go'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1

      - name: Get changed Go files
        id: changed
        run: |
          echo "üîç –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ .go —Ñ–∞–π–ª—ã:"
          FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} | grep '\.go$' || true)
          echo "$FILES"

          # –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
          {
            echo 'FILES<<EOF'
            echo "$FILES"
            echo 'EOF'
          } >> "$GITHUB_ENV"

      - name: Run related tests
        run: |
          echo "üìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤:"
          echo "$FILES"

          success=false

          echo "$FILES" | while read file; do
            echo "üìÑ –ò–∑–º–µ–Ω—ë–Ω —Ñ–∞–π–ª: $file"
            if [[ "$file" =~ ^exercises/exercise_([0-9]+)\.go$ ]]; then
              num="${BASH_REMATCH[1]}"
              test_file="exercises/exercise_${num}_test.go"
              if [ -f "$test_file" ]; then
                echo "‚úÖ –ù–∞–π–¥–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: $test_file"
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º–µ–Ω–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
                tests=$(grep -E '^func Test[^(]*' "$test_file" | sed -E 's/^func (Test[^(]*).*/\1/')
                if [ -n "$tests" ]; then
                  echo "üß™ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã:"
                  echo "$tests"
                  for test in $tests; do
                    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º: $test"
                    go test ./exercises -run "^$test$" -v && success=true
                  done
                else
                  echo "‚ö†Ô∏è –ù–µ—Ç —Ñ—É–Ω–∫—Ü–∏–π Test* –≤ $test_file"
                fi
              else
                echo "‚ö†Ô∏è –ù–µ—Ç test-—Ñ–∞–π–ª–∞: $test_file"
              fi
            else
              echo "‚è≠ –ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∞–π–ª (–Ω–µ exercise_NN.go): $file"
            fi
          done

          $success || echo "‚ö†Ô∏è –ù–∏ –æ–¥–∏–Ω —Ç–µ—Å—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"